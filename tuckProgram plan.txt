navigation: back and home btn

setup - shop - data

	setup: accounts - products
		accounts: enumerate accounts, actions: import - add - delete all - page interaction
			account info: fname, sname, budget, spending limit per, discount (% / £), sub-zero allowance, notes
			    notes: there can only be one of each of the following at a time: spending limit, discount and sub-zero allowance. These can only be deleted once they are active.
		products: ditto
			products info: product name, cost price, selling price (show profit info), quantity, discount (% / £), offer (buy x get y free), purchase limit per, notes
			notes: there can only be one of each of the following at a time: discount, offer and purchase limit. These can only be deleted once they are active.

	shop: enumerate products w/ quantity - actions: add/remove quantity, select account, purchase btn, discount
		(when selecting user show budget info / once selected)

	data: product history, account history, log file (some sort of reports)

	settings: compactness, font, colour scheme, password system for certain settings and perhaps for initialisation of program?, \
	          enabling different functionality such as use of user discounts (always show, show only when above 0, never show but use if applicable, disable), \
	          default limit below 0, default discount type, alert for low quantity, alerts for offers ending soon


Notes:
I have forgotten specifics in what needs working on with accounts. Main functions have been implemented so I have moved on to products
Add functionality to adding items so that the 'Enter' key can be used
Create an exporter
Globalise font details
enable importing of accounts with minimum of f/l_name and budget and for products with just name and selling price
Create a user system and encrypt database so it can only be accessed through the program
Allow editing of budget for user with the right credentials
Allow extension of data that is time bound (for example extending an offer on an item)
Allow printing of data
Add history button in item form to show all changes made to the item
Optimise program to close database whenever not in use for multiple clients open at once
For data tab: profit assuming x% of owned quantity is sold (just a thought)
Alert user when scrolling in item_form if data has been changed
-------
use data validation / correction when importing: 
	do not allow more than one account with the same name;
	do not allow more data on any account than necessary / only import relevant info
page movement after adding account
page scrolling with exact number per page(s)
data validation for adding entries


future plans:
create web server for multiple clients to access
use raspi zero w as a server for multiple clients to access (augment it with an rtc chip)
log (with full timestamps)
verify actions complete successfully and report accordingly
Provide multiple view types (grid, compact, etc.)